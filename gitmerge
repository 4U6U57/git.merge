#!/bin/bash

ExeDir="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)"
ExeName="$(basename ${BASH_SOURCE[0]})"

# Boolean class
True=0
False=1
Boolean() {
   return $1
}

# Exit behavior
Exit() {
   Echo "Exiting program."
   exit
}
trap "Exit" SIGHUP SIGINT SIGTERM

# Echo Configuration
source $ExeDir/Echo.sh
EchoPrefix="$(EchoColor Cyan)$ExeName$(EchoColor):"

# Program start
Echo "$ExeName - Git repository merging utility"

# Find base repo
BaseName=""
if [[ -e .git ]]; then
   bash
   BaseName=$(basename pwd)
   Echo "Currently in git repo $BaseName."
   Echo "Would you like to use this as your base? (y/n)"
   Echo -n "[$ExeName]$ "
   Read Input
   if [[ $Input != "y" ]]; then
      Echo "Please change directories, and try again."
      Exit
   fi
   Echo "Setting up $BaseName as base."
else
   Echo "No base git repo detected, creating."
   Echo "What would you like to call it? (*)"
   Echo -n "[$ExeName]$ "
   Read BaseName
   if [[ $BaseName == "" ]]; then
      Echo "Invalid name"
      Exit
   fi
   Echo "Setting up $BaseName as new git base."
   mkdir $BaseName
   cd $BaseName
   git init
   echo -e "# $BaseName\nBase git repo created with $ExeName" > README
   git add -A
   git commit -m "[$ExeName] Initial commit"
fi

while Boolean $True; do
   ImportDir=".Import"
   rm -rf $ImportDir
   Echo "Ready for the next repo to merge into $BaseName."
   Echo "Enter in a URL (SSH/HTM), or nothing to finish: (URL,\n)"
   Echo -n "[$ExeName]$ "
   Read RepoUrl
   if [[ $RepoUrl == "" ]]; then
      break
   fi
   RepoName=$(basename $(basename $RepoUrl) .git)
   Echo "Enter in the name of the repo, or nothing for default $RepoName (*,\n)"
   Echo -n "[$ExeName]$ "
   Read RepoNameTemp
   if [[ $RepoNameTemp != "" ]]; then
      RepoName=$(echo $RepoNameTemp | cut -d ' ' -f 1)
   else
      RepoName=$(basename $(basename $RepoUrl) .git)
   fi
   mkdir $RepoName
   if [[ -e $RepoName ]]; then
      Echo "Merging in $RepoName"
      git clone $RepoUrl $ImportDir
      if [[ -e $ImportDir ]]; then
         cd $ImportDir
         mkdir .$RepoName
         mv * .$RepoName
         mv .$RepoName $RepoName
         git add -A
         git commit -m "[$ExeName] Moving $RepoName to subdirectory"
         cd ..
         git remote add -f Import $ImportDir
         rm -rf $ImportDir
         git merge Import/master -m "[$ExeName] Merging $RepoName into $BaseName"
         git remote rm Import
         git add -A
         git commit -m "[$ExeName] Finalizing $RepoName"
      else
         Echo "Error cloning in $RepoUrl"
      fi
   else
      Echo "Error creating $RepoName subdirectory"
   fi
done
